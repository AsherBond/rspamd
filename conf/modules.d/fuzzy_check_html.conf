# HTML Fuzzy Hashing Configuration Example
#
# This configuration demonstrates how to use HTML fuzzy hashing for:
# 1. Detecting spam campaigns with similar HTML structure
# 2. Phishing detection (similar structure, different CTA domains)
# 3. Brand protection (legitimate templates vs. fake emails)

fuzzy_check {
  # Example rule for HTML structure matching
  rule "HTML_FUZZY" {
    # Standard fuzzy storage configuration
    servers = "localhost:11335";

    # Encryption (optional, recommended for production)
    # encryption_key = "your_base32_encoded_public_key";
    # fuzzy_key = "your_hashing_key";
    # fuzzy_shingles_key = "your_shingles_key";

    # Algorithm for shingles (mumhash recommended for HTML)
    algorithm = "mumhash";

    # Enable HTML fuzzy hashing
    html_shingles = true;

    # Minimum number of HTML tags to generate hash
    # (prevents hashing of trivial HTML snippets)
    min_html_tags = 15;

    # Weight multiplier for HTML fuzzy matches
    # Can be < 1.0 to reduce impact, or > 1.0 to increase
    html_weight = 1.0;

    # Regular fuzzy check settings
    symbol = "FUZZY_HTML";
    max_score = 20.0;

    # Fuzzy flag mappings
    fuzzy_map = {
      # Whitelist: known legitimate HTML structures
      "FUZZY_HTML_WHITELIST" {
        flag = 1;
        max_score = 20.0;
      }
      # Blacklist: known spam/phishing HTML structures
      "FUZZY_HTML_BLACKLIST" {
        flag = 2;
        max_score = 20.0;
      }
    }

    # Optional: skip specific hashes
    # skip_hashes = "${LOCAL_CONFDIR}/local.d/fuzzy_skip_html.map";
  }

  # Example: Combined text + HTML rule
  rule "COMBINED_FUZZY" {
    servers = "localhost:11335";
    algorithm = "mumhash";

    # Enable both text and HTML fuzzy hashing
    html_shingles = true;
    min_html_tags = 10;

    # This rule will generate:
    # - Text fuzzy hashes (from content)
    # - HTML fuzzy hashes (from structure)
    # Both sent to same storage with same flag

    symbol = "FUZZY_COMBINED";
    max_score = 30.0;

    fuzzy_map = {
      "FUZZY_COMBINED_WHITE" {
        flag = 10;
        max_score = 30.0;
      }
      "FUZZY_COMBINED_SPAM" {
        flag = 11;
        max_score = 30.0;
      }
    }
  }

  # Example: Phishing detection rule (higher weight for HTML)
  rule "PHISHING_DETECTION" {
    servers = "localhost:11335";
    algorithm = "mumhash";

    html_shingles = true;
    min_html_tags = 20;

    # Higher weight for HTML matches = prioritize structure over content
    html_weight = 1.5;

    symbol = "FUZZY_PHISHING";
    max_score = 25.0;

    fuzzy_map = {
      # Known phishing HTML templates
      "FUZZY_PHISHING_HTML" {
        flag = 20;
        max_score = 25.0;
      }
      # Known legitimate brands (for comparison)
      "FUZZY_LEGIT_BRANDS" {
        flag = 21;
        max_score = -25.0;  # Negative score = whitelist
      }
    }
  }
}

# Additional configuration for phishing detection rules
# See rules/fuzzy_html_phishing.lua for Lua-based detection logic
